"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import collections.abc
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.message
from . import question_pb2
import sys

if sys.version_info >= (3, 8):
    import typing as typing_extensions
else:
    import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

@typing_extensions.final
class Response(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    @typing_extensions.final
    class Field(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        INT_FIELD_FIELD_NUMBER: builtins.int
        DECIMAL_FIELD_FIELD_NUMBER: builtins.int
        STRING_FIELD_FIELD_NUMBER: builtins.int
        BYTES_FIELD_FIELD_NUMBER: builtins.int
        int_field: builtins.int
        decimal_field: builtins.float
        string_field: builtins.str
        bytes_field: builtins.bytes
        def __init__(
            self,
            *,
            int_field: builtins.int = ...,
            decimal_field: builtins.float = ...,
            string_field: builtins.str = ...,
            bytes_field: builtins.bytes = ...,
        ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["bytes_field", b"bytes_field", "decimal_field", b"decimal_field", "field", b"field", "int_field", b"int_field", "string_field", b"string_field"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["bytes_field", b"bytes_field", "decimal_field", b"decimal_field", "field", b"field", "int_field", b"int_field", "string_field", b"string_field"]) -> None: ...
        def WhichOneof(self, oneof_group: typing_extensions.Literal["field", b"field"]) -> typing_extensions.Literal["int_field", "decimal_field", "string_field", "bytes_field"] | None: ...

    TYPE_FIELD_NUMBER: builtins.int
    FIELDS_FIELD_NUMBER: builtins.int
    type: question_pb2.QuestionType.ValueType
    @property
    def fields(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Response.Field]: ...
    def __init__(
        self,
        *,
        type: question_pb2.QuestionType.ValueType | None = ...,
        fields: collections.abc.Iterable[global___Response.Field] | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_type", b"_type", "type", b"type"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_type", b"_type", "fields", b"fields", "type", b"type"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_type", b"_type"]) -> typing_extensions.Literal["type"] | None: ...

global___Response = Response
